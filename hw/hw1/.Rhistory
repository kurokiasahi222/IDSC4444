# c) mean: 489.8, median 490
my_data[, "Retail.Price"]
# c) mean: 489.8, median 490
my_data[, "Integrated.Wireless"]
# c) mean: 489.8, median 490
colnames(my_data)
my_data[, "Integrated.Wireless."]
data_integrated_wireless = subset(my_data, Integrated.Wireless = "Yes")
summary(data_integrated_wireless)
data_integrated_wireless = subset(my_data, Integrated.Wireless ==
"Yes")
data_integrated_wireless = subset(my_data, Integrated.Wireless ==
"Yes")
data_integrated_wireless = subset(my_data, Integrated.Wireless ==
"Yes")
data_integrated_wireless = subset(my_data, Integrated.Wireless. ==
"Yes")
summary(data_integrated_wireless)
source('~/Desktop/University of Minnesota/Fall2021/IDSC 4444/hw/hw1/hw1.R', echo=TRUE)
summary(my_data)
###
is.na(my_data$OS.X.Store)
###
which(is.na(my_data$OS.X.Store))
###
which(is.na(my_data$OS.X.Store))
which(is.na(my_data$CustomerStoreDistance))
# b) missing data at OS.X.Store, OS.Y.store, and CustomerStoreDistance
summary(my_data)
# d)
data_integrated_wireless = subset(my_data, Integrated.Wireless. ==
"Yes")
# d)
data_integrated_wireless <- subset(my_data, Integrated.Wireless. ==
"Yes")
summary(data_integrated_wireless)
data_non_intergrated_wireless <- subset(my_data, Integrated.Wireless != "Yes")
data_non_intergrated_wireless <- subset(my_data, Integrated.Wireless. != "Yes")
summary(data_non_intergrated_wireless)
# e)
head(my_data)
# e)
my_data_sorted <- my_data[order(my_data$Retail.Price, decreasing = TRUE),]
my_data_sorted[1, ]
# f)
sum(my_data$HD.Size..GB. < 150)
x <- subset(my_data, HD.Size..GB. < 150)
# g)
sum(my_data$Retail.Price)
### Part2
library(ggplot2)
a)
# a)
ggplot(data= my_data, aes(x = my_data$CustomerStoreDistance)) +
geom_histogram(alpha=1) +
ggtitle("Distribution of Sepal Lenght By Class") +
labs(x = "Sepal Length", y = "Count")
# a)
ggplot(data= my_data, aes(x = my_data$CustomerStoreDistance)) +
geom_histogram(alpha=1) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count")
# a)
summary(my_data)
ggplot(data= my_data, aes(x = my_data$CustomerStoreDistance)) +
geom_histogram(alpha=1) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count") +
cale_fill_gradient(low="purple", high="darkblue")
ggplot(data= my_data, aes(x = my_data$CustomerStoreDistance)) +
geom_histogram(alpha=1) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count") +
scale_fill_gradient(low="purple", high="darkblue")
ggplot(data= my_data, aes(x = CustomerStoreDistance)) +
geom_histogram(alpha=1) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count") +
scale_fill_gradient(low="purple", high="darkblue")
ggplot(data= my_data, aes(x = CustomerStoreDistance)) +
geom_histogram(alpha=1) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count") +
scale_fill_gradient(low="purple", high="darkblue")
ggplot(data= my_data, aes(x = CustomerStoreDistance)) +
geom_histogram(alpha=1) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count") +
scale_fill_gradient(low="blue", high="darkblue")
ggplot(data= my_data, aes(x = CustomerStoreDistance)) +
geom_histogram(alpha=1) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count") +
scale_fill_gradient(low="blue", high="red")
ggplot(data= my_data, aes(x = CustomerStoreDistance)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="blue", high="red") +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count")
ggplot(data= my_data, aes(x = CustomerStoreDistance)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="blue", high="red") +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count", na.value = NA)
ggplot(data= my_data, aes(x = CustomerStoreDistance)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="blue", high="red", , na.value = NA)) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count"
ggplot(data= my_data, aes(x = CustomerStoreDistance)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="blue", high="red", na.value = NA)) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count"
# Part 1
# a)
my_data = read.csv("LaptopSales (1).csv")
head(my_data)
# b) missing data at OS.X.Store, OS.Y.store, and CustomerStoreDistance
summary(my_data)
which(is.na(my_data$OS.X.Store))
which(is.na(my_data$OS.Y.Store))
which(is.na(my_data$CustomerStoreDistance))
### missing values in row 1675 1774 1969 2203
# c) mean: 489.8, median 490
# d)
data_integrated_wireless <- subset(my_data, Integrated.Wireless. ==
"Yes")
data_non_intergrated_wireless <- subset(my_data, Integrated.Wireless. != "Yes")
summary(data_integrated_wireless)
summary(data_non_intergrated_wireless)
### Average price of a laptop with Integrated Wireless $495.9
### Average price of a laptop without Integrated Wireless $483.3
# e)
my_data_sorted <- my_data[order(my_data$Retail.Price, decreasing = TRUE),]
my_data_sorted[1, ]
### Configuration type with the highest price is 359
# f)
sum(my_data$HD.Size..GB. < 150)
### 1749
# g)
sum(my_data$Retail.Price)
### Total price = $ 1231470
### Part2
library(ggplot2)
ggplot(data= my_data, aes(x = CustomerStoreDistance)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="blue", high="red", na.value = NA) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count")
ggplot(data= my_data, aes(x = CustomerStoreDistance), fill = ..count..) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="blue", high="red", na.value = NA) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count")
ggplot(data= my_data, aes(x = CustomerStoreDistance, fill = ..count..) +
ggplot(data= my_data, aes(x = CustomerStoreDistance, fill = ..count..)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="blue", high="red", na.value = NA) +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count")
ggplot(data= my_data, aes(x = CustomerStoreDistance, fill = ..count..)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="blue", high="red") +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count")
ggplot(data= my_data, aes(x = CustomerStoreDistance, fill = ..count..)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="blue", high="red")
ggplot(data= my_data, aes(x = CustomerStoreDistance, fill = ..count..)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="purple", high="darkblue")
ggplot(data= my_data, aes(x = CustomerStoreDistance, fill = ..count..)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance")
# b)
ggplot(data = my_data, aes(y=Price, group =RetailPrice, color = RetailPrice)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=8, outlier.size=3)
# b)
ggplot(data = my_data, aes(y=RetailPrice, group =RetailPrice, color = RetailPrice)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=8, outlier.size=3)
# b)
ggplot(data = my_data, aes(y=Retail.Price, group =Retail.Price, color = Retail.Price)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=8, outlier.size=3)
# b)
ggplot(data = my_data, aes(y=Retail.Price)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=8, outlier.size=3)
# b)
ggplot(data = my_data, aes(y=Retail.Price)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=8, outlier.size=2)
# b)
ggplot(data = my_data, aes(y=Retail.Price)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=8, outlier.size=2)
# b)
ggplot(data = my_data, aes(y=Retail.Price)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=2, outlier.size=3)
# b)
ggplot(data = my_data, aes(y=Retail.Price)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=2, outlier.size=3) +
ggtitle("Box plot for Retail Price")
, color = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3)
, color = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3)
, color = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3)
, color = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3)
ggplot(data = my_data, aes(y=Retail.Price, group = HD.Size..GB.
, color = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3)
# d)
# part a)
ggplot(data = my_data, aes(x= Battery.Life..Hours., y = Retail.Price, fill = ..count..)) +
geom_histogram(alpha = 1) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Relationship between Battery life and price")
ggplot(data = my_data, aes(x= Battery.Life..Hours., y = Retail.Price, fill = ..count..)) +
geom_histogram(alpha = 1) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Relationship between Battery life and price")
# d)
# part a)
ggplot(data = my_data, aes(x= Battery.Life..Hours., y = Retail.Price, fill = ..count..)) +
geom_point() +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Relationship between Battery life and price")
ggplot(data = my_data, aes(x= Battery.Life..Hours., y = Retail.Price, fill = ..count..)) +
geom_point() +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Relationship between Battery life and price")
# d)
# part a)
ggplot(data = my_data, aes(x= Battery.Life..Hours., y = Retail.Price, fill = ..Retail.Price..)) +
geom_point() +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Relationship between Battery life and price")
ggplot(data = my_data, aes(x= Battery.Life..Hours., y = Retail.Price, fill = ..Retail.Price..)) +
geom_point() +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Relationship between Battery life and price")
# d)
# part a)
ggplot(data = my_data, aes(x= Battery.Life..Hours., y = Retail.Price)) +
geom_point() +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Relationship between Battery life and price")
# d)
# part a)
ggplot(data = my_data, aes(x= Battery.Life..Hours., y = Retail.Price)) +
geom_point() +
ggtitle("Relationship between Battery life and price")
# d)
# part a)
ggplot(data = my_data, aes(x= Battery.Life..Hours., y = Retail.Price, fill = Battery.Life..Hours. )) +
geom_point() +
ggtitle("Relationship between Battery life and price")
# d)
# part a)
ggplot(data <- my_data, aes(x= Battery.Life..Hours., y = Retail.Price, color = Battery.Life..Hours. )) +
geom_point() +
ggtitle("Relationship between Battery life and price")
# part b)
summary(my_data)
# part b)
my_data$Retail.Price.Cat[Battery.Life..Hours.] <- "Battery.Life.4.hours"
# part b)
my_data$Retail.Price.Cat[Battery.Life..Hours. == 4] <- "Battery.Life.4.hours"
# part b)
my_data$Retail.Price.Cat[Battery.Life..Hours. == 4] <- "Battery.Life.4.hours"
# d)
# part a)
ggplot(data <- my_data, aes(x= Battery.Life..Hours., y = Retail.Price, color = Battery.Life..Hours. )) +
geom_point() +
ggtitle("Relationship between Battery life and price")
# part b)
my_data$Retail.Price.Cat[Battery.Life..Hours. = 4] <- "Battery.Life.4.hours"
# part b)
my_data$Retail.Price.Cat[Battery.Life..Hours. == 4] <- "Battery.Life.4.hours"
summary(my_data)
# part b)
my_data$Retail.Price.Cat[Battery.Life..Hours. <= 4] <- "Battery Life 4 hours"
# part b)
my_data$Battery.Life..Hours.[battery <= 4] <- "Battery Life 4 hours"
summary(my_data)
head(my_data)
# part b)
my_data$Battery.Life.Cat[ Battery.Life..Hours. <= 4] <- "Battery Life 4 hours"
# part b)
my_data_Battery <- my_data$Battery.Life..Hours.
# part b)
my_data_Battery <- my_data[Battery.Life..Hours.]
# part b)
my_data_Battery <- my_data[colnames ==Battery.Life..Hours.]
# part b)
my_data_Battery <-
my_data$Battery.Life.Cat[, Battery.Life..Hours. <= 4] <- "Battery Life 4 hours"
# part b)
my_data_Battery <-
my_data$Battery.Life.Cat[my_data$Battery.Life..Hours. <= 4] <- "Battery Life 4 hours"
# part b)
my_data$Battery.Life.Cat[my_data$Battery.Life..Hours. <= 4] <- "Battery Life 4 hours"
my_data
head(my_data)
unique(my_data$Battery.Life..Hours.)
my_data$Battery.Life.Cat[my_data$Battery.Life..Hours. == 6] <- "Battery Life 6 hours"
my_data$Battery.Life.Cat[my_data$Battery.Life..Hours. == 4] <- "Battery Life 4 hours"
my_data$Battery.Life.Cat[my_data$Battery.Life..Hours. == 5] <- "Battery Life 5 hours"
my_data$Battery.Life.Cat[my_data$Battery.Life..Hours. == 6] <- "Battery Life 6 hours"
my_data$Battery.Life.Cat
head(my_data$Battery.Life.Cat)
summary(my_data)
?hist
retail_battery = my_data$Retail.Price / my_data$Battery.Life..Hours.
hist(retail_battery
)
# part b)
retail_battery = my_data$Retail.Price / my_data$Battery.Life..Hours. == 4
# part b)
retail_battery = my_data$Retail.Price / my_data$Battery.Life..Hours.
# part b)
retail_battery = my_data$Retail.Price / (my_data$Battery.Life..Hours. == 4)
hist(retail_battery)
ggplot(data <- my_data, aes(x = Battery.Life.Cat, fill = ..count..)) +
geom_histogram(alpha(0.8)) +
ggplot(data <- my_data, aes(x = Battery.Life.Cat, fill = ..count..)) +
geom_histogram(alpha(0.8))
ggplot(data = my_data, aes(x = Battery.Life.Cat, fill = ..count..)) +
geom_histogram(alpha(0.8))
ggplot(data = my_data, aes(x = Battery.Life.Cat)) +
geom_histogram(alpha(0.8))
ggplot(data = my_data, aes(x = Battery.Life.Cat)) +
geom_histogram(alpha(0.8)) +
gtitle("Retail Price divided by categories based on battery life")
ggplot(data = my_data, aes(x = Battery.Life.Cat)) +
geom_histogram(alpha(0.8)) +
gtitle("Retail Price divided by categories based on battery life")
head(my_data)
ggplot(data= my_data, aes(x = CustomerStoreDistance, fill = ..count..)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Life.Cat)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Life.Cat)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance")
my_data$Battery.Cat[my_data$Battery.Life..Hours. == 4] <- "Battery Life 4 hours"
my_data$Battery.Cat[my_data$Battery.Life..Hours. == 5] <- "Battery Life 5 hours"
my_data$Battery.Cat[my_data$Battery.Life..Hours. == 6] <- "Battery Life 6 hours"
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Life.Cat)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Life.Cat)) +
geom_histogram(alpha=0.8) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance")
ggplot(data= my_data, aes(x = Retail.Price)) +
geom_histogram(alpha=0.8) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance")
ggplot(data= my_data, aes(x = Retail.Price, color = Battery.Cat)) +
geom_histogram(alpha=0.8) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance")
ggplot(data= my_data, aes(x = Retail.Price, color = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Distrubution of Customer Store Distance")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Distrubution of Customer Store Distance")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category") +
lab(y = "Retail Price")
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category")
ggplot(data= my_data, aes(x = Retail.Price,group= Battery.Cat, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category")
ggplot(data= my_data, aes(x = Retail.Price,group= Battery.Cat, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category")
ggplot(data <- my_data, aes(y=Retail.Price, group = HD.Size..GB.
, color = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3)
ggplot(data <- my_data, aes(y=Retail.Price, group = HD.Size..GB.
, fill = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3)
ggplot(data <- my_data, aes(x = HD.Size..GB., y=Retail.Price, group = HD.Size..GB.
, fill = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Retail Price by HD Size GB")
, fill = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3) +
scale_fill_gradient(low="red", high="blue") +
ggtitle("Retail Price by HD Size GB")
ggplot(data <- my_data, aes(x = HD.Size..GB., y=Retail.Price, group = HD.Size..GB.
, fill = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3) +
scale_fill_gradient(low="red", high="blue") +
ggtitle("Retail Price by HD Size GB")
ggplot(data <- my_data, aes(x = HD.Size..GB., y=Retail.Price, group = HD.Size..GB.
, fill = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3) +
scale_fill_gradient(low="blue", high="red") +
ggtitle("Retail Price by HD Size GB")
ggplot(data = my_data, aes(y=Retail.Price)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=2, outlier.size=3) +
ggtitle("Box plot for Retail Price")
ggplot(data <- my_data, aes(x = HD.Size..GB., y=Retail.Price, group = HD.Size..GB.
, fill = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3) +
scale_fill_gradient(low="blue", high="red") +
ggtitle("Retail Price by HD Size GB")
summary(my_data)
summary(my_data$HD.Size..GB.)
which(my_data$HD.Size..GB.)
which(is.na(my_data$HD.Size..GB.))
### Insights: The four box plot shows that as the HD Size GB become larger the the price will
# increase too. Also, there are couple of outliers in the purple boxplot
unique(my_data$HD.Size..GB.)
ggplot(data <- my_data, aes(x= Battery.Life..Hours., y = Retail.Price, color = Battery.Life..Hours. )) +
geom_point() +
ggtitle("Relationship between Battery life and price")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category")
ggplot(data= my_data, aes(x = Retail.Price,group= Battery.Cat, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category")
ggplot(data <- my_data, aes(x= Battery.Life..Hours., y = Retail.Price, color = Battery.Life..Hours. )) +
geom_point() +
ggtitle("Relationship between Battery life and price")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category")
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category") +
labs(x = "Retail Price", y = "Count" )
ggplot(data <- my_data, aes(x= Battery.Life..Hours., y = Retail.Price, color = Battery.Life..Hours. )) +
geom_point() +
ggtitle("Relationship between Battery life and price")
ggplot(data <- my_data, aes(x= Battery.Life..Hours., y = Retail.Price, color = Battery.Life..Hours. )) +
geom_point() +
ggtitle("Relationship between Battery life and price") +
labs(x = "Battery life in hours", y = "Retail Price")
ggplot(data <- my_data, aes(x = HD.Size..GB., y=Retail.Price, group = HD.Size..GB.
, fill = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3) +
scale_fill_gradient(low="blue", high="red") +
ggtitle("Retail Price by HD Size GB")
ggplot(data <- my_data, aes(x = HD.Size..GB., y=Retail.Price, group = HD.Size..GB.
, fill = HD.Size..GB.)) +
geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=1, outlier.size=3) +
scale_fill_gradient(low="blue", high="red") +
ggtitle("Retail Price by HD Size GB") +
labs(x = "HD Size GB", y = "Retail Price")
ggplot(data = my_data, aes(y=Retail.Price)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=2, outlier.size=3) +
ggtitle("Box plot for Retail Price")
ggplot(data = my_data, aes(y=Retail.Price)) +
geom_boxplot(notch = TRUE, outlier.colour="orange", outlier.shape=2, outlier.size=3) +
ggtitle("Box plot for Retail Price") +
labs(y = "Retail Price")
ggplot(data= my_data, aes(x = CustomerStoreDistance, fill = ..count..)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance")
ggplot(data= my_data, aes(x = CustomerStoreDistance, fill = ..count..)) +
geom_histogram(alpha=1) +
scale_fill_gradient(low="purple", high="darkblue") +
ggtitle("Distrubution of Customer Store Distance") +
labs(x = "Customer Store Distance", y = "Count")
my_data$Battery.Cat[my_data$Battery.Life..Hours. == 4] <- "Battery Life 4 hours"
my_data$Battery.Cat[my_data$Battery.Life..Hours. == 5] <- "Battery Life 5 hours"
my_data$Battery.Cat[my_data$Battery.Life..Hours. == 6] <- "Battery Life 6 hours"
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category") +
labs(x = "Retail Price", y = "Count" )
ggplot(data <- my_data, aes(x= Battery.Life..Hours., y = Retail.Price, color = Battery.Life..Hours. )) +
geom_point() +
ggtitle("Relationship between Battery life and price") +
labs(x = "Battery life in hours", y = "Retail Price")
my_data$Battery.Cat[my_data$Battery.Life..Hours. == 4] <- "Battery Life 4 hours"
my_data$Battery.Cat[my_data$Battery.Life..Hours. == 5] <- "Battery Life 5 hours"
my_data$Battery.Cat[my_data$Battery.Life..Hours. == 6] <- "Battery Life 6 hours"
ggplot(data= my_data, aes(x = Retail.Price, fill = Battery.Cat)) +
geom_histogram(alpha=0.8) +
ggtitle("Retail price by battery category") +
labs(x = "Retail Price", y = "Count" )
